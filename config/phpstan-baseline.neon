parameters:
	ignoreErrors:
		-
			message: '#^Only booleans are allowed in an if condition, string given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: ../src/CSSList/AtRuleBlockList.php

		-
			message: '#^Parameter &\$result by\-ref type of method Sabberworm\\CSS\\CSSList\\CSSBlockList\:\:allSelectors\(\) expects array\<int, Sabberworm\\CSS\\Property\\Selector\>, array\<int, Sabberworm\\CSS\\Property\\Selector\|string\> given\.$#'
			identifier: parameterByRef.type
			count: 2
			path: ../src/CSSList/CSSBlockList.php

		-
			message: '#^Parameter &\$result by\-ref type of method Sabberworm\\CSS\\CSSList\\CSSBlockList\:\:allValues\(\) expects array\<int, Sabberworm\\CSS\\Value\\Value\>, array\<int, Sabberworm\\CSS\\CSSList\\CSSList\|Sabberworm\\CSS\\Value\\Value\> given\.$#'
			identifier: parameterByRef.type
			count: 1
			path: ../src/CSSList/CSSBlockList.php

		-
			message: '#^Loose comparison via "\!\=" is not allowed\.$#'
			identifier: notEqual.notAllowed
			count: 1
			path: ../src/CSSList/CSSList.php

		-
			message: '#^Loose comparison via "\=\=" is not allowed\.$#'
			identifier: equal.notAllowed
			count: 1
			path: ../src/CSSList/CSSList.php

		-
			message: '#^Short ternary operator is not allowed\. Use null coalesce operator if applicable or consider using long ternary\.$#'
			identifier: ternary.shortNotAllowed
			count: 1
			path: ../src/CSSList/CSSList.php

		-
			message: '#^Parameters should have "string\|null" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/CSSList/Document.php

		-
			message: '#^Loose comparison via "\=\=" is not allowed\.$#'
			identifier: equal.notAllowed
			count: 1
			path: ../src/Parsing/ParserState.php

		-
			message: '#^PHPDoc tag @return with type array\<int, Sabberworm\\CSS\\Comment\\Comment\>\|void is not subtype of native type array\.$#'
			identifier: return.phpDocType
			count: 1
			path: ../src/Parsing/ParserState.php

		-
			message: '#^Cannot call method render\(\) on string\.$#'
			identifier: method.nonObject
			count: 1
			path: ../src/Property/CSSNamespace.php

		-
			message: '#^Only booleans are allowed in an if condition, string given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: ../src/Property/CSSNamespace.php

		-
			message: '#^Method Sabberworm\\CSS\\Property\\Charset\:\:atRuleArgs\(\) should return string but returns Sabberworm\\CSS\\Value\\CSSString\.$#'
			identifier: return.type
			count: 1
			path: ../src/Property/Charset.php

		-
			message: '#^Only booleans are allowed in an if condition, string given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: ../src/Property/Import.php

		-
			message: '#^Only booleans are allowed in an if condition, Sabberworm\\CSS\\Value\\RuleValueList\|string\|null given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: ../src/Rule/Rule.php

		-
			message: '#^Parameters should have "bool" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/Rule/Rule.php

		-
			message: '#^Parameters should have "int\|int" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/Rule/Rule.php

		-
			message: '#^Only booleans are allowed in an if condition, string given\.$#'
			identifier: if.condNotBoolean
			count: 1
			path: ../src/RuleSet/AtRuleSet.php

		-
			message: '#^Call to an undefined method Sabberworm\\CSS\\OutputFormat\:\:comments\(\)\.$#'
			identifier: method.notFound
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Call to an undefined method Sabberworm\\CSS\\OutputFormat\:\:implode\(\)\.$#'
			identifier: method.notFound
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Call to an undefined method Sabberworm\\CSS\\OutputFormat\:\:spaceAfterSelectorSeparator\(\)\.$#'
			identifier: method.notFound
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Call to an undefined method Sabberworm\\CSS\\OutputFormat\:\:spaceBeforeOpeningBrace\(\)\.$#'
			identifier: method.notFound
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Call to an undefined method Sabberworm\\CSS\\OutputFormat\:\:spaceBeforeSelectorSeparator\(\)\.$#'
			identifier: method.notFound
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Loose comparison via "\!\=" is not allowed\.$#'
			identifier: notEqual.notAllowed
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Parameters should have "string" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Returning false in non return bool class method\. Use null with type\|null instead or add bool return type$#'
			identifier: typePerfect.nullOverFalse
			count: 1
			path: ../src/RuleSet/DeclarationBlock.php

		-
			message: '#^Only booleans are allowed in a negated boolean, string\|null given\.$#'
			identifier: booleanNot.exprNotBoolean
			count: 2
			path: ../src/RuleSet/RuleSet.php

		-
			message: '#^Parameter \#1 \$comments \(array\<string, Sabberworm\\CSS\\Comment\\Comment\>\) of method Sabberworm\\CSS\\RuleSet\\RuleSet\:\:addComments\(\) should be contravariant with parameter \$comments \(array\<Sabberworm\\CSS\\Comment\\Comment\>\) of method Sabberworm\\CSS\\Comment\\Commentable\:\:addComments\(\)$#'
			identifier: method.childParameterType
			count: 1
			path: ../src/RuleSet/RuleSet.php

		-
			message: '#^Parameter \#1 \$comments \(array\<string, Sabberworm\\CSS\\Comment\\Comment\>\) of method Sabberworm\\CSS\\RuleSet\\RuleSet\:\:setComments\(\) should be contravariant with parameter \$comments \(array\<Sabberworm\\CSS\\Comment\\Comment\>\) of method Sabberworm\\CSS\\Comment\\Commentable\:\:setComments\(\)$#'
			identifier: method.childParameterType
			count: 1
			path: ../src/RuleSet/RuleSet.php

		-
			message: '#^Parameters should have "Sabberworm\\CSS\\Rule\\Rule" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/RuleSet/RuleSet.php

		-
			message: '#^Parameters should have "string" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/RuleSet/RuleSet.php

		-
			message: '#^Parameters should have "string" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/Value/CSSString.php

		-
			message: '#^Loose comparison via "\!\=" is not allowed\.$#'
			identifier: notEqual.notAllowed
			count: 3
			path: ../src/Value/CalcFunction.php

		-
			message: '#^Call to method Sabberworm\\CSS\\Value\\Color\:\:hasNoneAsComponentValue\(\) with incorrect case\: HasNoneAsComponentValue$#'
			identifier: method.nameCase
			count: 1
			path: ../src/Value/Color.php

		-
			message: '#^Cannot call method getSize\(\) on Sabberworm\\CSS\\Value\\Value\|string\.$#'
			identifier: method.nonObject
			count: 3
			path: ../src/Value/Color.php

		-
			message: '#^Loose comparison via "\=\=" is not allowed\.$#'
			identifier: equal.notAllowed
			count: 3
			path: ../src/Value/Color.php

		-
			message: '#^Provide more specific return type "Sabberworm\\CSS\\Value\\Color" over abstract one$#'
			identifier: typePerfect.narrowReturnObjectType
			count: 1
			path: ../src/Value/Color.php

		-
			message: '#^Loose comparison via "\!\=" is not allowed\.$#'
			identifier: notEqual.notAllowed
			count: 1
			path: ../src/Value/Size.php

		-
			message: '#^Parameters should have "float" types as the only types passed to this method$#'
			identifier: typePerfect.narrowPublicClassMethodParamType
			count: 1
			path: ../src/Value/Size.php
